#include <Adafruit_GFX.h>
#include <Adafruit_NeoMatrix.h>
#include <Adafruit_NeoPixel.h>
#ifndef PSTR
 #define PSTR // Make Arduino Due happy
#endif

#define PIN 6
#define WIDTH 6
#define HEIGHT 10

const int buttonPin = 2;     // the number of the pushbutton pin
const int ledPin =  13;      // the number of the LED pin
int buttonState = 0;

// Example for NeoPixel Shield.  In this application we'd like to use it
// as a 5x8 tall matrix, with the USB port positioned at the top of the
// Arduino.  When held that way, the first pixel is at the top right, and
// lines are arranged in columns, progressive order.  The shield uses
// 800 KHz (v2) pixels that expect GRB color data.
Adafruit_NeoMatrix matrix = Adafruit_NeoMatrix(
  WIDTH, // width of NeoPixel matrix
  HEIGHT,  // height of matrix
  PIN,
  /* matrix layout flags (see readme.md section neomatrix library for more explanations) */
  NEO_MATRIX_BOTTOM  + NEO_MATRIX_RIGHT +
  NEO_MATRIX_COLUMNS + NEO_MATRIX_ZIGZAG,
  /* pixel type flags (see readme.md for neomatrix library more explanations) */
  NEO_GRB         + NEO_KHZ800
);

void getInput(){
  buttonState = digitalRead(buttonPin);
  // check if the pushbutton is pressed. If it is, the buttonState is HIGH:
  if (buttonState == LOW) {
    // turn LED on:
    digitalWrite(ledPin, HIGH);
  } else {
    // turn LED off:
    digitalWrite(ledPin, LOW);
  }
}

const uint16_t colors[] = { matrix.Color(255, 0, 0), matrix.Color(0, 255, 0), matrix.Color(0, 0, 255) };

int tblock[3][3] = {
  {0,1,0},
  {1,1,1},
  {0,0,0}
};

int lblock[3][3] = {
  {1,0,0},
  {1,1,1},
  {0,0,0}
};

void drawBlock(int block[3][3], int *position){
  matrix.fillScreen(0);
  for(int i=0 ; i<3 ; i++)
    for(int j=0 ; j<3 ; j++){
      if(block[i][j] == 1)
        matrix.drawPixel(position[0]+j, position[1]+i, matrix.Color(255, 0, 0));
    }
  matrix.show();
}

int stateCount = 0;
void updatePosition(int *position){
  if(stateCount++ % 10 == 0){

    if(position[1] < HEIGHT-2)
      position[1]++;
    stateCount = 1;
  }
}

class Blocks{
  public:
    int block[3][3];
};

void setup() {
  pinMode(ledPin, OUTPUT);
  pinMode(buttonPin, INPUT);
  matrix.begin();
}

uint16_t staticBlocks[WIDTH][HEIGHT];

int position[] = {0,0}; // {x,y}
void loop() {
  getInput();
  updatePosition(position);
  drawBlock(tblock, position);
  drawBlock(lblock, position);
  delay(50);
}
